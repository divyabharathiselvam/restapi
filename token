----token.js
var express=require('express');
var jwt=require('jsonwebtoken');

const app=express();

const mysql=require('mysql');
const bodyparser=require('body-parser');

var mysqlconnection=mysql.createConnection({
  host:'northside.in',
  user:'shakir',
  password: 'shakir123',
  database:'shakir_test',
  multipleStatements:true
});

mysqlconnection.connect((err)=>{
if(!err)
console.log('DB CONNECTIONs IS SUCCEDED');
else
console.log('db connection failed \n error:'+JSON.stringify(err,undefined,2));

});
app.use(express.static('public'));
app.set('view engine','ejs');
app.use(bodyparser.json());
app.use(express.json());


app.listen(3000,()=>console.log('express server'));
app.get('/',(req,res)=>{
res.render('home');
});
app.get('/divya',(req,res)=>{
  mysqlconnection.query('select * from divya',(err,rows,fields)=>{
    if(!err)
    //console.log(rows[0].id);
    res.send(rows);
    else
    console.log(err);
  })
});

app.get('/api/login',function(req,res){
  //auth user
    var user={id:3};
   jwt.sign({user},'my_secret_key',(err,token)=>{
      res.send(token)
    });
    
  });

  function ensureToken(req,res,next){
    const bearerHeader =req.headers["authorization"];
    if(typeof bearerHeader!=='undefined'){
      const bearer=bearerHeader.split(" ");
      const bearerToken=bearer[1];
      req.token=bearerToken;
      next(); 
    }else{
      res.sendStatus(403);
    }
  }

app.get('/get', ensureToken, (req, res) => {
  jwt.verify(req.token, 'my_secret_key', (err, data) => {
      if (err) {
          res.sendStatus(403);
      }
      else{
  mysqlconnection.query('select * from divya  ',(err,rows)=>{
    if(err)
    //console.log(rows[0].id);
    res.send(err);
    else
    res.send(rows);
  })
  }
})
});

app.post('/post', ensureToken, (req, res) => {
  jwt.verify(req.token, 'my_secret_key', (err, data) => {
      if (err) {
          res.sendStatus(403);
      }
      else{
  mysqlconnection.query('select * from divya where id=?',[req.body.id],(err,rows)=>{
    if(err)
    //console.log(rows[0].id);
    res.send(err);
    else
    console.log(rows);
  })
  }
})
});

app.put('/put/:id', ensureToken, (req, res) => {
  jwt.verify(req.token, 'my_secret_key', (err, data) => {
      if (err) {
          res.sendStatus(403);
      }
      else{
        mysqlconnection.query('update divya set name=? where id=?', [req.body.name,req.body.id] ,(error, results, fields)=>{
    if(err)
    //console.log(rows[0].id);
    res.send(err);
    else
    console.log(rows);
  })
  }
})
});
app.delete('/delete/:id', ensureToken, (req, res) => {
  jwt.verify(req.token, 'my_secret_key', (err, data) => {
      if (err) {
          res.sendStatus(403);
      }
      else{
        mysqlconnection.query('delete from divya where id=?',[req.params.id],(err,rows)=>{
    if(err)
    //console.log(rows[0].id);
    res.send('deleted successfully');
    else
    console.log(rows);
  })
  }
})
});

app.delete('/divya/:id',(req,res)=>{
  mysqlconnection.query('delete from divya where id=?',[req.params.id],(err,rows,fields)=>{
    if(!err)
    //console.log(rows[0].id);
    res.send('deleted successfully');
    else
    console.log(rows);
  })
});



